#
# $Id: LXSetup 1387 2011-08-23 14:46:39Z viari $
#
# LX setup
# usage: should normaly be sourced from other scripts as :
# usage: source `dirname $0`/LXSetup
#

if ($?LX_SOURCED == 0) then

  setenv LX_SOURCED 1
  
  # --------------------------------------
  # adapt one of these if needed
  # --------------------------------------
  #
  # o AwkCmd  : name of awk command (on some system should be 'gawk')
  #
  # o TmpDir : writable temporay directory
  #
  # o Verbose : default verbosity (may be changed by -v option)
  #
  
#  setenv AwkCmd        "gawk"
  setenv AwkCmd        "awk"  
  setenv TmpDir        "/tmp"
  setenv Verbose       0
  
  # --------------------------------------
  # don't change hereafter (normally)
  # --------------------------------------
  
  setenv This $0

  setenv ScriptDir `dirname $This`

  setenv PortName `$ScriptDir/LXGuessPort`
  
  if ($status != 0) then
    echo "result of $ScriptDir/LXGuessPort is $PortName"
    echo "this means that portname is not set properly"
    echo "please read doc/DevelopersDoc.txt and fix LXGuessPort accordingly"
    kill $$
  endif
  
  setenv BinDir $ScriptDir/../ports/$PortName/bin

  setenv DataDir $ScriptDir/data
  
  # make sure TmpDir exists
  
  if (! -d $TmpDir) mkdir $TmpDir
  
  # setup the LC_ALL environment variable (for Linux mostly)
  # so the GNU tools (like sort) will work properly
  
  setenv LC_ALL POSIX

endif

# --------------------------------------
# path should be set each time
# --------------------------------------

set path = ($ScriptDir $BinDir $path)

# --------------------------------------
# alias should be sourced each time
# --------------------------------------

alias Debug 'if ($Verbose) echo "# "\!:* >> /dev/stderr' 

alias Notify 'echo "# "\!:* >> /dev/stderr' 

alias Error 'echo "# Error "\!:2-* >> /dev/stderr; Exit \!:1' 

alias Exit 'set Stat = \!:1; Debug "<--- $0 [$Stat]"; exit \!:1'

alias Stop 'Exit $Stat'

alias GetStatus 'set Stat = $status; Debug "status: $Stat"'

alias Exec 'Debug "execute: \!:*"; \!:* ; GetStatus'

alias OnError 'if ($Stat != 0)'

alias OnSuccess 'if ($Stat == 0)'

alias ExitUsage 'egrep "^#  *usage:" $0; Exit 1'

alias Abort 'Error \!:1 "abort"'

alias CheckAbort 'GetStatus; OnError eval Abort \!:1'

alias NeedArg 'if ($#Argv < \!:1) eval ExitUsage'

alias Shift 'shift Argv'

alias NeedFile 'if (! -e \!:1) eval Error 5 "\!:1 : file not found"'

alias NeedDir 'if (! -d \!:1) eval Error 5 "\!:1 : directory not found"'

alias TempoName 'set \!:1 = "$TmpDir/LX_"`date|tr -d -c "[0-9]"`"_$$.\!:2"'

alias TempoClean 'Debug "cleaning $TmpDir"; \rm -f $TmpDir/LX_*_$$.* >>& /dev/null'

alias Cat 'awk '"'"'{print "# " $0}'"'"' \!:*'

# --------------------------------------
# reset Stat each time
# --------------------------------------

set Stat = 0

# --------------------------------------
# process arguments to catch -v and -h
# and setup Argv, Argn (leave argv, argn untouched)
# Opts contains any standard option used (-v)
# --------------------------------------

set Argv = ()
set Opts = ()
@ Argn = 0
foreach arg ($argv) 
  switch ("$arg")
    case "-v":
      setenv Verbose 1
      set Opts = ($Opts $arg)
      breaksw
    case "-h":
      egrep "^#  *usage:" $0 | sed -e "s/^#  *//1" >> /dev/stderr
      kill $$  # exit will not work from sourced file
      breaksw
    default:
        set Argv = ($Argv "$arg")
        @ Argn ++
  endsw
end

if ($Verbose) then
  alias TempoClean ""
endif

# --------------------------------------
# notification for debug
# --------------------------------------

Debug "---> $0"
